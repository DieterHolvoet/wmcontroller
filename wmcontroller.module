<?php

use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Url;
use Drupal\wmcontroller\EventSubscriber\PagerRewriteSubscriber;

/**
 * Implements hook_theme().
 */
function wmcontroller_theme()
{
    return \Drupal::service('wmcontroller.service.templatelocator')
        ->getThemes();
}

/**
 * Sets the variables set in a Controller
 *
 * @param $variables
 * @see \Drupal\wmcontroller\ViewBuilder\ViewBuilder::setData
 */
function wmcontroller_theme_set_variables(&$variables)
{
    // Skip if no data is set or not set as an array
    if (!isset($variables['_data']) || !is_array($variables['_data'])) {
        return;
    }
    $variables = array_merge($variables, $variables['_data']);
    unset($variables['_data']);
}

/**
 * Implements hook_cron()
 */
function wmcontroller_cron()
{
    wmcontroller_cron_purge_expired();
}

/**
 * Purge expired wmcontroller_cache items.
 */
function wmcontroller_cron_purge_expired()
{
    $ctr = Drupal::getContainer();
    $ctr->get('wmcontroller.cache.storage')->remove(
        $ctr->get('wmcontroller.cache.storage')->getExpired(
            $ctr->getParameter('wmcontroller.cache.purge_per_cron')
        )
    );
}

/**
 * Implements hook_cache_flush().
 */
function wmcontroller_cache_flush()
{
    $ctr = \Drupal::getContainer();
    if ($ctr->getParameter('wmcontroller.cache.flush_on_cache_rebuild')) {
        $ctr->get('wmcontroller.cache.storage')->flush();
    }
}
