parameters:
    # Expiry rules
    # maxage = client side caching duration
    # s-maxage = server side caching duration (this can be drupal db or a cdn)
    wmcontroller.cache.expiry:
        # Determine max and s-max based on content-type and/or bundle.
        # _default is used when no definition is available for any given bundle.
        entities:
            node:
                _default: { maxage: 120, s-maxage: 300 }
                dish:     { maxage: 300, s-maxage: 7200 }
            taxonomy_term:
                _default: { maxage: 120, s-maxage: 300 }

        # If the current page isn't rendering some kind of entity these regexes
        # will determine which maxage will be set.
        # The paths these regexes are matched against are the actual request paths,
        # not the route name or route path.
        paths:
            '^/$':           { maxage: 250, s-maxage: 3600 }
            '^/node/\d+$':   { maxage: 1200, s-maxage: 10 }
            '^/admin/.*$':   { maxage: 0, s-maxage: 0 }
            '^/user(/.*)?$': { maxage: 0, s-maxage: 0 }



    # Store the contents of the response and serve it.
    # If disabled, only tags will be stored.
    # This could be useful if the site is proxied by a cdn.
    wmcontroller.cache.store: true

    # Disables caching in its entirety, only add s-maxage and maxage headers.
    # (Also implies wmcontroller.cache.store = false)
    wmcontroller.cache.tags: true

    # Amount of items that should be purged during each cron run.
    # This also determines the amount of times the wmcontroller.purge event
    # is triggered.
    wmcontroller.cache.purge_per_cron: 100

services:
    wmcontroller.logger:
      parent: logger.channel_base
      arguments: ['wmcontroller']

    wmcontroller.config:
      class: Drupal\Core\Config\ImmutableConfig
      factory: config.factory:get
      arguments: ['wmcontroller.settings']

    wmcontroller.routing.injectfrontcontroller:
        class:  Drupal\wmcontroller\Routing\InjectFrontControllerRouteSubscriber
        arguments: ['@wmcontroller.config', '@wmcontroller.logger']
        tags: [{ name: event_subscriber }]

    wmcontroller.renderer.viewbuilder:
        class: Drupal\wmcontroller\EventSubscriber\ViewRendererSubscriber
        arguments: ['@entity_type.manager']
        tags: [{ name: event_subscriber }]

    wmcontroller.service.templatelocator:
        class: Drupal\wmcontroller\Service\TemplateLocator
        arguments: ['@wmcontroller.config']

    wmcontroller.cache.dispatcher:
        class: Drupal\wmcontroller\Service\Cache\MainEntityDispatcher
        arguments: ['@event_dispatcher']

    wmcontroller.cache.manager:
        class: Drupal\wmcontroller\Service\Cache\Manager
        arguments: ['@wmcontroller.cache.storage.mysql', '@event_dispatcher']

    wmcontroller.cache.subscriber:
        class: Drupal\wmcontroller\EventSubscriber\CacheSubscriber
        arguments:
            - '@wmcontroller.cache.manager'
            - '%wmcontroller.cache.expiry%'
            - '%wmcontroller.cache.store%'
            - '%wmcontroller.cache.tags%'
        tags: [{ name: event_subscriber }]

    wmcontroller.cache.storage.mysql:
        class: Drupal\wmcontroller\Service\Cache\Storage\Database
        arguments: ['@database']

